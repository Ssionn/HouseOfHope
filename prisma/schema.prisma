// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int          @id @default(autoincrement())
  name           String
  email          String       @unique
  password       String
  provider       String?
  provider_token String?
  role           Role
  surveys        SurveyUser[]
  Survey         Survey[]
}

model Survey {
  id          Int          @id @default(autoincrement())
  title       String
  description String?
  creator     User         @relation(fields: [creatorId], references: [id])
  creatorId   Int
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  questions   Question[]
  users       SurveyUser[]
}

model SurveyUser {
  userId     Int
  surveyId   Int
  assignedAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  survey Survey @relation(fields: [surveyId], references: [id])

  @@id([userId, surveyId])
}

model Question {
  id        Int      @id @default(autoincrement())
  text      String
  survey    Survey   @relation(fields: [surveyId], references: [id])
  surveyId  Int
  options   Option[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Option {
  id         Int      @id @default(autoincrement())
  text       String
  question   Question @relation(fields: [questionId], references: [id])
  questionId Int
}

enum Role {
  admin
  team_leader
  member
}
